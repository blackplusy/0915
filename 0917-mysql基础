--5.bmp
	1>select avg(english) from mark;
	2>
		select m.math,c.address,c.telno,c.name  from cust c,mark m
		where c.studentno=m.studentno
		and studentno in (11,22,33,44,55);

		select m.math,c.address,c.telno,c.name  from cust c,mark m
		where c.studentno=m.studentno	
		and (studentno=11
		or studentno=22
		or studentno=33
		or studentno=44
		or studentno=55);
--4.png
	1>select  xm,zkzh from tb_student where score>0 and score<5;
	2>
	select * from tb_student where xm='张三' and score=5;
	3>
	select s.name,m.成绩 from 学生 s,成绩 c
	where s.准考证号=c.准考证号
	and s.年龄 between 20 and 35
	order by s.准考证号 desc;
--2.png
	select  count(*) from table1 t1,table2 t2
	where t1.学生id=t2.学生id;

	select t1.姓名 ,t2.家庭住址 from table1 t1,table2 t2
	where t1.学生id=t2.学生id
	and t1.姓名 like '张%'
	and t1.性别='女'
	order by t1.姓名;

==================================================================
1.子查询(嵌套)
	一条SQL语句的执行依赖于另外一条SQL语句的执行结果
	需求:查询国家名称是China的城市名称
		1>查询国家表中满足条件的country_id
			select country_id from country where country='China';

		2>查询城市表中country_id为上面查询出来结果的城市名称
			select city from city where country_id=(select country_id from country where country='China');
	子查询可以用于数据的新增、修改和删除、查询
	--2.jpg
		3>
		insert into achievement values((select id from student where name='Robert'),80);
		4>
		update achievement set mark=87 where id=(select id from student where name='Rose');
		5>
		delete from achievement where id=(select id from student where name='Betty');
		delete from student where name='Betty';
	子查询分为单行子查询和多行子查询
		单行子查询:查询子句查询出来的结果是1行，可以用in，=
		多行子查询:查询子句查询出来结果是多行，用in
		查询以C开头的国家有哪些城市
		1>查询国家表中满足条件的country_id
			select country_id from country where country like 'C%';
		2>查询城市表中country_id为上面查询出来结果的城市名称
			select city from city where country_id in (select country_id from country where country like 'C%');
	子查询的结果可以作为表来使用
		查询city表中city_id最大的城市名称
		select max(city_id) from city;
		select city from city where city_id=(select max(city_id) from city);
		select c.city from city c,(select max(city_id) id  from city) t
		where c.city_id=t.id;
	练习--7.jpg
		1>
			a.查询c表中满足条件c#
				select c# from c where cn='税收基础';
			b.查询sc表中c#为上面查询出来的s#
				select s# from sc where c# in (select c# from c where cn='税收基础')
			c.查询s表中s#为上面查询出来的名字和学号
				select sn,s# from s where s# in (select s# from sc where c# in (select c# from c where cn='税收基础'));
		2>
			a.查询sc表中满足条件s#
				select s# from sc where c#='C2';
			b.查询s表中s#为上面查询结果的xxx
				select sn,sd from s  where s# in (select s# from sc where c#='C2');
		3>
			select sn,sd from s  where s# in (select s# from sc where c#!='C5');

		4>
			distinct函数去重
			select count(distinct(s#)) from sc;
		5>
			a.查询sc表中满足条件的s#
				select s# from sc group by s# having count(*)>5;
			b.查询s表中s#为上面查询出来结果的xxx
				select s#，sd from s where s# in (select s# from sc group by s# having count(*)>5)



查询以C开头的国家有哪些城市?

国家       country_id
城市表     country_id
1>查询国家表中C开头的country_id
	select country_id from country where country like 'C%';
2>查询城市表中country_id为上面查询出来结果的城市名称
	select city from city where country_id in (select country_id from country where country like 'C%');

查询客户表中名字为MARY的所在城市?
city address       city_id
address customer   address_id
1>查询客户表中名字为MARY的address_id
	select address_id from customer where first_name='Mary';
2>查询地址表中address_id为上面查询出来结果的city_id
	select city_id from address where address_id in (select address_id from customer where first_name='Mary');
3>查询城市表中city_id为上面查询出来结果的city
	select city from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='Mary'));

查询客户表中名字为MARY的所在国家?
city address       city_id
address customer   address_id
1>查询客户表中名字为MARY的address_id
	select address_id from customer where first_name='Mary';
2>查询地址表中address_id为上面查询出来结果的city_id
	select city_id from address where address_id in (select address_id from customer where first_name='Mary');
3>查询城市表中city_id为上面查询结果的country_id
	select country_id from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='Mary'));
4>查询国家表中country_id为上面查询出来结果的国家名字
	select country from country where country_id in (select country_id from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='Mary')));

--练习:3.png
	select * from dt_pay where salary>(select avg(salary) from dt_pay);
	select * from dt_pay;
	truncate table dt_pay;
--练习:华为.jpg
	select * from student order by ssex;
	select * from score where degree between 80 and 100;
--练习:
	select * from emp where deptno=30;
	select ename,empno,deptno from emp;
	select * from emp where comm>sal;
	select * from emp where comm>sal*0.6;

2.索引和视图
	索引:类似于一本书的目录，加快查询速度，降低数据增删改性能
	语法:
		create index 索引名字
		on 表(列);
	create table aaa as select * from city;

	需求:aaa表中	city_id列增加索引
		create index i_city_id
		on aaa(city_id);
	alter table 表 drop index 索引名字
	需求:删除索引i_city_id
		alter table aaa drop index i_city_id;
	视图，类似于一张表，通常是只读的,当作表使用
	语法:
	create view 视图名字
	as
	语句
	需求:创建视图，每个国家有多少个城市
	create view v_1
	as
	select co.country,count(c.city) from city c,country co
		where c.country_id=co.country_id
		group by co.country;
	删除视图
	drop view 视图名字
	需求:删除视图v_1
		drop view v_1
3.存储过程
	delimiter //  声明 //代表语句结束
	语法:create or replace procedure 存储过程名字
		begin
			逻辑代码
		end;
	调用存储过程
		call 存储过程名字
