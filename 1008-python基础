1.文件操作
	a.文件操作应用场景
		1>网站记录日志的时候
		2>报表数据
		3>爬虫爬取数写入到文件
		4>招聘网站简历的导入导出
	b.文件操作
		b1.读文件
			open函数，常见2个参数，第一个是文件路径，第二个是文件的操作
			r代表读
		b2.写文件
			w代表写
		b3.追加内容到文件
			a代表追加
2.文件操作案例
	a.read readline readlines
		read 读取字节数，如果没有设置字节数，默认读取到文件结尾
		readline 读取下一行，每次读出一行内容，读取时候内存较小，大文件应用的比较多，返回字符串
		readlines 读取文件所有行，保存在一个列表中，作为迭代器遍历，占用内存
	b.小案例
		D:\\3.txt 内容
			heygor 119
			特朗普  110
		判断电话110是否在文件中
3.csv文件操作
	a.csv文件是什么
		逗号分隔值，文件以纯文本形式存储表格数据
	b.csv文件的读
		使用python处理excel文件需要导入excel模块（自带）
		import csv
	c.csv文件的写
		python生成excel兼容csv的话，创建参数必须有dialect='excel'


	任务1:
		键盘输入用户名和密码到csv文件中
		伪代码:
			输入 admin
			输入 123
			1.csv中存入
			admin 123

	任务2:
		设置一个字典，存储用户名和密码
		判断文件中的用户名和密码是否可以登录
		伪代码
			设置字典 dic={'admin':123,'user':'456'}
			读取1.csv中用户名是否字典中，如果是判断密码是否是对应密码，如果不是，退出
4.函数的定义和调用
	a.什么是函数
		开发时候使用指定代码多次，为了提高代码重用率和效率把多个功能代码组织为一个模块，函数可以使用系统自带函数
		最底层:
			1.插入钥匙
			2.左转钥匙
			3.右转钥匙
		中层(功能):
			开锁:
				1.插入钥匙
				2.左转钥匙
				3.拔出钥匙
		上层(业务逻辑):
			回家:
				1.开汽车锁
				2.嘟嘟嘟
				3.开门锁
				4.开保险柜锁
		例子1:登录网站(用户名、密码、按钮)
			1.打开网页
			2.点击用户名输入框
			3.清空用户名输入框
			4.输入用户名信息
			5.点击密码输入框
			6.清空密码输入框
			7.输入密码细腻
			8.点击登录
		例子2:
			1.打开网页
			2.操作用户名
				点击xxx
				清空xxx
				输入xxx
			3.操作密码
				点击xxx
				清空xxx
				输入xxx
			4.点击登录
		例子3:
			定义函数
			输入信息(信息类型,信息):
				点击 信息类型 输入框
				清空 信息类型 输入框
				填写 信息 输入框
			注意:
				信息类型
					用户名
					密码
			1.打开网页
			2.调用    输入信息('用户名','admin')
			3.调用    输入信息('密码','123456')
			4.点击登录
	b.自定义函数
	c.函数的常用格式
		c1.无参数，无返回值(自己工作,散养)
		c2.无参数，有返回值(主动发周报)
		c3.有参数，无返回值(领导安排任务，不管效果)
		c4.有参数，有返回值(领导安排任务，要求汇报完成情况)
	d.return语句
		d1.返回值定义
			函数在定义时候直接输出，有些时候需要对函数进行一系列操作，需要返回值
		d2.return和print区别
			return 语句返回计算的结果(值)，需要print才能打印出来
			print  直接输出到控制端
		d3.return语句
			一般用于退出函数，return下面语句是不会执行的
			一个返回值
			多个返回值
	e.函数的传参
		e1.函数的形参和实参
			def print_name(name):
				print('your name is %s'% name)
			print_name('o8ma')
			形参是函数定义时候括号中的name，实参是调用函数传入的o8ma
			定义在函数体内的是形参，调用函数传入参数是实参
		e2.实参位置
			通过形参和实参对应顺序就是实参位置，只有位置一致才能匹配
		e3.关键字参数
			关键字参数传递名称-值，直接把名称和值对应起来就不会混淆
		e4.参数默认值
			函数定义时候设置形参，形参有默认值，当函数调用时候没有实参时候使用形参默认值
		e5.不定长参数
			有时候需要处理比当初声明更多的参数叫做不定长参数
			*args 位置参数传入数据装配成元组类型
			**args 位置参数传入的数据装配成字典
			

